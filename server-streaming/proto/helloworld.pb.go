// Code generated by protoc-gen-go. DO NOT EDIT.
// source: helloworld.proto

/*
Package feed is a generated protocol buffer package.

It is generated from these files:
	helloworld.proto

It has these top-level messages:
	FeedResponse
*/
package feed

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "go.pedge.io/pb/go/google/protobuf"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FeedResponse struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *FeedResponse) Reset()                    { *m = FeedResponse{} }
func (m *FeedResponse) String() string            { return proto.CompactTextString(m) }
func (*FeedResponse) ProtoMessage()               {}
func (*FeedResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *FeedResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*FeedResponse)(nil), "feed.FeedResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Feeder service

type FeederClient interface {
	GetNewFeed(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*FeedResponse, error)
}

type feederClient struct {
	cc *grpc.ClientConn
}

func NewFeederClient(cc *grpc.ClientConn) FeederClient {
	return &feederClient{cc}
}

func (c *feederClient) GetNewFeed(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*FeedResponse, error) {
	out := new(FeedResponse)
	err := grpc.Invoke(ctx, "/feed.Feeder/GetNewFeed", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Feeder service

type FeederServer interface {
	GetNewFeed(context.Context, *google_protobuf.Empty) (*FeedResponse, error)
}

func RegisterFeederServer(s *grpc.Server, srv FeederServer) {
	s.RegisterService(&_Feeder_serviceDesc, srv)
}

func _Feeder_GetNewFeed_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeederServer).GetNewFeed(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/feed.Feeder/GetNewFeed",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeederServer).GetNewFeed(ctx, req.(*google_protobuf.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Feeder_serviceDesc = grpc.ServiceDesc{
	ServiceName: "feed.Feeder",
	HandlerType: (*FeederServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetNewFeed",
			Handler:    _Feeder_GetNewFeed_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "helloworld.proto",
}

func init() { proto.RegisterFile("helloworld.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 153 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xc8, 0x48, 0xcd, 0xc9,
	0xc9, 0x2f, 0xcf, 0x2f, 0xca, 0x49, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x49, 0x4b,
	0x4d, 0x4d, 0x91, 0x92, 0x4e, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x07, 0x8b, 0x25, 0x95, 0xa6,
	0xe9, 0xa7, 0xe6, 0x16, 0x94, 0x54, 0x42, 0x94, 0x28, 0x69, 0x70, 0xf1, 0xb8, 0xa5, 0xa6, 0xa6,
	0x04, 0xa5, 0x16, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x0a, 0x49, 0x70, 0xb1, 0xe7, 0xa6, 0x16, 0x17,
	0x27, 0xa6, 0xa7, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0xc1, 0xb8, 0x46, 0x2e, 0x5c, 0x6c,
	0x20, 0x95, 0xa9, 0x45, 0x42, 0x56, 0x5c, 0x5c, 0xee, 0xa9, 0x25, 0x7e, 0xa9, 0xe5, 0x20, 0xbe,
	0x90, 0x98, 0x1e, 0xc4, 0x7c, 0x3d, 0x98, 0xf9, 0x7a, 0xae, 0x20, 0xf3, 0xa5, 0x84, 0xf4, 0x40,
	0xb6, 0xeb, 0x21, 0x9b, 0xae, 0xc4, 0x90, 0xc4, 0x06, 0x56, 0x65, 0x0c, 0x08, 0x00, 0x00, 0xff,
	0xff, 0x2a, 0x26, 0x85, 0x8a, 0xad, 0x00, 0x00, 0x00,
}
